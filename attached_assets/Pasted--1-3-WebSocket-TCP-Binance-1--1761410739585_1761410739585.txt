Имею в виду буквально: откроешь 1–3 отдельных WebSocket-подключения (TCP-сокета) к Binance, а не «1–3 подписки». Зачем так:

Лимит Binance: один WS-канал может держать до 1024 потоков (combined streams). Если тебе нужно >1024 подписок (а при 500+ пар и 2–3 стримов на пару это легко), шардируешь по 2–3 соединениям, чтобы уложиться в лимит и иметь запас. 
developers.binance.com

Как считать:
total_streams = symbols * streams_per_symbol + extra_streams →
connections_needed ≈ ceil(total_streams / 900) (держим ~10–15% запаса, а не тютелька в тютельку 1024).

Пример раскладки под твою стратегию:

Conn#1 — все kline_15m по 500+ символам (≈500 потоков).

Conn#2 — доп. стримы, напр. kline_1m/markPrice для «кандидатов» (динамический список 100–300 символов).

Conn#3 — агрегированный весь рынок ликвидаций !forceOrder@arr (1 поток на весь рынок) + (опционально) user-data listenKey отдельно для надёжности. 
developers.binance.com

Полезные нюансы:

Используй combined streams (/stream?streams=a/b/c…) — именно они дают мультиплекс до 1024 на одно соединение. 
developers.binance.com

На одном соединении ограничение 5 “входящих” служебных сообщений/сек (PING/PONG/subscribe/unsubscribe). Делай троттлинг при массовых подписках. 
developers.binance.com

С 2025-02 у Binance server ping каждые ~20s, отвечать PONG надо в ~60s — не забыть хэндлить, иначе дропнет. 
developers.binance.com

Чтобы не тратить 500 отдельных @forceOrder, бери один !forceOrder@arr (все ликвидации рынка в одном потоке). Это резко снижает количество стримов. 
developers.binance.com

Итого: “1–3 коннекта” = 1–3 отдельные WS-соединения, на каждое вешаешь до ~900 комбинированных стримов, распределяешь по типам (15m, «быстрые» 1m/mark, ликвидации/юзер-стрим) — так ты соблюдаешь лимиты и не упираешься в 1024 на одном канале.
Нужен ли API-ключ?

Публичные WS-потоки рынка (kline, markPrice, !forceOrder@arr и т.п.) — не требуют API-ключа вообще. Это «market data only». 
developers.binance.com
+2
developers.binance.com
+2

User-data (ордеры/баланс/позиции) — требуют listenKey, который создаётся REST-запросом с вашим API-ключом и продлевается каждые ~60 мин. Сам WS дальше идёт по …/ws/<listenKey>. 
developers.binance.com

Сколько WS-соединений и с каким ключом/IP

1–3 отдельных WS-соединения с одного IP — норм. На Binance одно соединение может держать до 1024 стримов; превышать не нужно → шардируете на 2–3 коннекта. 
developers.binance.com

Можно с одного IP. Но соблюдайте лимиты на подключения/сообщения, иначе начнут дропать и при частых нарушениях могут забанить IP временно. 
developers.binance.com
+1

Один API-ключ вам нужен только если подключаете user-data. Рекомендация: держать один WS c listenKey на бэкенде и раздавать события своим воркерам внутри приложения, вместо открытия десятков user-data сокетов. (Публичные рыночные потоки продолжают идти без ключа.)

Важные лимиты/правила (для стабильности)

1024 стрима максимум на одно WS-соединение; комбинированные стримы через /stream?streams=…. 
developers.binance.com

Входящие служебные сообщения (subscribe/unsubscribe/ping/pong) — лимит 10/с на фьючерсном WS; при превышении соединение рвут, а за частые нарушения — бан IP. Троттлите подписки. 
developers.binance.com

Коннект живёт до 24 ч — ожидайте дисконнект, переподключайтесь, отвечайте на ping (иначе дропнут). 
developers.binance.com

Попытки подключений: в общей доке Binance — до 300 подключений / 5 мин на IP. Не циклите reconnection без бэк-оффа. 
developers.binance.com

REST-лимиты (для свечей/истории/OI) считаются по IP (дефолт ~2400 вес/мин на IP на фьючерсах). Не мешайте частыми REST-пулами, если у вас WS. 
Binance

По вашей задаче

Для сканера на 500+ USDT-перпов вам хватит 2–3 WS-соединений без ключа:

все kline_15m,

«быстрые» стримы (например, markPrice/kline_1m) для кандидатов,

один общий !forceOrder@arr (ликвидации всего рынка). 
developers.binance.com
+1

Если добавите user-data для авто-менеджмента ордеров, тогда держите один listenKey (с API-ключом) и продляйте его каждые ~30–50 мин. 
developers.binance.com

Итог: публичные рыночные WS вам не требуют API-ключа; всё можно вести с одного IP, главное — уложиться в лимиты (1024 стрима/коннект, 10 служебных сообщений/с, осторожно с количеством реконнектов). Банить начинают за систематическое нарушение этих правил.